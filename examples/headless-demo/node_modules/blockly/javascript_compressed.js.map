{"version":3,"sources":["generators/javascript.js","generators/javascript/colour.js","generators/javascript/lists.js","generators/javascript/logic.js","generators/javascript/loops.js","generators/javascript/math.js","generators/javascript/procedures.js","generators/javascript/text.js","generators/javascript/variables.js","generators/javascript/variables_dynamic.js","generators/javascript/all.js"],"names":["Order","ATOMIC","NEW","MEMBER","FUNCTION_CALL","INCREMENT","DECREMENT","BITWISE_NOT","UNARY_PLUS","UNARY_NEGATION","LOGICAL_NOT","TYPEOF","VOID","DELETE","AWAIT","EXPONENTIATION","MULTIPLICATION","DIVISION","MODULUS","SUBTRACTION","ADDITION","BITWISE_SHIFT","RELATIONAL","IN","INSTANCEOF","EQUALITY","BITWISE_AND","BITWISE_XOR","BITWISE_OR","LOGICAL_AND","LOGICAL_OR","CONDITIONAL","ASSIGNMENT","YIELD","COMMA","NONE","JavascriptGenerator","CodeGenerator","constructor","name","ORDER_OVERRIDES","isInitialized","key","addReservedWords","Object","getOwnPropertyNames","globalThis","join","init","workspace","nameDB_","reset","Names","RESERVED_WORDS_","setVariableMap","getVariableMap","populateVariables","populateProcedures","defvars","devVarList","allDeveloperVariables","i","length","push","getName","NameType","DEVELOPER_VARIABLE","variables","allUsedVarModels","getId","VARIABLE","definitions_","finish","code","definitions","values","scrubNakedValue","line","quote_","string","replace","multiline_quote_","split","map","lines","scrub_","block","opt_thisOnly","commentCode","outputConnection","targetConnection","comment","getCommentText","wrap","COMMENT_WRAP","prefixLines","inputList","type","inputTypes","VALUE","childBlock","connection","targetBlock","allNestedComments","nextBlock","nextConnection","nextCode","blockToCode","getAdjusted","atId","opt_delta","opt_negate","opt_order","delta","order","ORDER_NONE","options","oneBasedIndex","defaultAtIndex","innerOrder","outerOrder","ORDER_ADDITION","ORDER_SUBTRACTION","ORDER_UNARY_NEGATION","at","valueToCode","isNumber","Number","Math","floor","javascriptGenerator","$jscomp$tmp$exports$module$name","forBlock","generator","getFieldValue","provideFunction_","functionName","FUNCTION_NAME_PLACEHOLDER_","red","green","blue","c1","c2","ratio","elements","Array","itemCount_","element","repeatCount","operator","item","mode","where","list","listOrder","Error","cacheList","match","listVar","getDistinctName","value","xVar","getSubstringIndex","listName","opt_at","where1","where2","at1","at2","wherePascalCase","at1Param","at2Param","direction","getCompareFunctionName","input","delimiter","n","STATEMENT_PREFIX","injectId","conditionCode","branchCode","statementToCode","STATEMENT_SUFFIX","INDENT","getInput","OPERATORS","argument0","argument1","defaultArgument","value_if","value_then","value_else","repeats","getField","String","branch","addLoopTrap","loopVar","endVar","until","variable0","increment","up","step","abs","startVar","incVar","indexVar","xfix","loop","getSurroundLoop","suppressPrefixSuffix","tuple","arg","CONSTANTS","PROPERTIES","dropdownProperty","suffix","inputOrder","outputOrder","numberToCheck","divisor","varName","func","argument2","funcName","PROCEDURE","xfix1","loopTrap","INFINITE_LOOP_TRAP","returnValue","xfix2","args","getVars","hasReturnValue_","strRegExp","forceString","test","stringName","indexOf","codeAndOrder","element0","element1","substring","text","textOrder","requiresLengthCall","msg","sub","from","to"],"mappings":"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","file":"javascript_compressed.js","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Helper functions for generating JavaScript for blocks.\n * @suppress {checkTypes|globalThis}\n */\n\nimport * as goog from '../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript');\n\nimport * as Variables from '../core/variables.js';\nimport * as stringUtils from '../core/utils/string.js';\n// import type {Block} from '../core/block.js';\nimport {CodeGenerator} from '../core/generator.js';\nimport {Names, NameType} from '../core/names.js';\n// import type {Workspace} from '../core/workspace.js';\nimport {inputTypes} from '../core/inputs/input_types.js';\n\n\n/**\n * Order of operation ENUMs.\n * https://developer.mozilla.org/en/JavaScript/Reference/Operators/Operator_Precedence\n * @enum {number}\n */\nexport const Order = {\n  ATOMIC: 0,            // 0 \"\" ...\n  NEW: 1.1,             // new\n  MEMBER: 1.2,          // . []\n  FUNCTION_CALL: 2,     // ()\n  INCREMENT: 3,         // ++\n  DECREMENT: 3,         // --\n  BITWISE_NOT: 4.1,     // ~\n  UNARY_PLUS: 4.2,      // +\n  UNARY_NEGATION: 4.3,  // -\n  LOGICAL_NOT: 4.4,     // !\n  TYPEOF: 4.5,          // typeof\n  VOID: 4.6,            // void\n  DELETE: 4.7,          // delete\n  AWAIT: 4.8,           // await\n  EXPONENTIATION: 5.0,  // **\n  MULTIPLICATION: 5.1,  // *\n  DIVISION: 5.2,        // /\n  MODULUS: 5.3,         // %\n  SUBTRACTION: 6.1,     // -\n  ADDITION: 6.2,        // +\n  BITWISE_SHIFT: 7,     // << >> >>>\n  RELATIONAL: 8,        // < <= > >=\n  IN: 8,                // in\n  INSTANCEOF: 8,        // instanceof\n  EQUALITY: 9,          // == != === !==\n  BITWISE_AND: 10,      // &\n  BITWISE_XOR: 11,      // ^\n  BITWISE_OR: 12,       // |\n  LOGICAL_AND: 13,      // &&\n  LOGICAL_OR: 14,       // ||\n  CONDITIONAL: 15,      // ?:\n  ASSIGNMENT: 16,       //: += -= **= *= /= %= <<= >>= ...\n  YIELD: 17,            // yield\n  COMMA: 18,            // ,\n  NONE: 99,             // (...)\n};\n\n/**\n * JavaScript code generator class.\n */\nexport class JavascriptGenerator extends CodeGenerator {\n  /**\n   * List of outer-inner pairings that do NOT require parentheses.\n   * @type {!Array<!Array<number>>}\n   */\n  ORDER_OVERRIDES = [\n    // (foo()).bar -> foo().bar\n    // (foo())[0] -> foo()[0]\n    [Order.FUNCTION_CALL, Order.MEMBER],\n    // (foo())() -> foo()()\n    [Order.FUNCTION_CALL, Order.FUNCTION_CALL],\n    // (foo.bar).baz -> foo.bar.baz\n    // (foo.bar)[0] -> foo.bar[0]\n    // (foo[0]).bar -> foo[0].bar\n    // (foo[0])[1] -> foo[0][1]\n    [Order.MEMBER, Order.MEMBER],\n    // (foo.bar)() -> foo.bar()\n    // (foo[0])() -> foo[0]()\n    [Order.MEMBER, Order.FUNCTION_CALL],\n\n    // !(!foo) -> !!foo\n    [Order.LOGICAL_NOT, Order.LOGICAL_NOT],\n    // a * (b * c) -> a * b * c\n    [Order.MULTIPLICATION, Order.MULTIPLICATION],\n    // a + (b + c) -> a + b + c\n    [Order.ADDITION, Order.ADDITION],\n    // a && (b && c) -> a && b && c\n    [Order.LOGICAL_AND, Order.LOGICAL_AND],\n    // a || (b || c) -> a || b || c\n    [Order.LOGICAL_OR, Order.LOGICAL_OR]\n  ];\n\n  constructor(name) {\n    super(name ?? 'JavaScript');\n    this.isInitialized = false;\n\n    // Copy Order values onto instance for backwards compatibility\n    // while ensuring they are not part of the publically-advertised\n    // API.\n    //\n    // TODO(#7085): deprecate these in due course.  (Could initially\n    // replace data properties with get accessors that call\n    // deprecate.warn().)\n    for (const key in Order) {\n      this['ORDER_' + key] = Order[key];\n    }\n\n    // List of illegal variable names.  This is not intended to be a\n    // security feature.  Blockly is 100% client-side, so bypassing\n    // this list is trivial.  This is intended to prevent users from\n    // accidentally clobbering a built-in object or function.\n    this.addReservedWords(\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Keywords\n        'break,case,catch,class,const,continue,debugger,default,delete,do,' +\n        'else,export,extends,finally,for,function,if,import,in,instanceof,' +\n        'new,return,super,switch,this,throw,try,typeof,var,void,' +\n        'while,with,yield,' +\n        'enum,' +\n        'implements,interface,let,package,private,protected,public,static,' +\n        'await,' +\n        'null,true,false,' +\n        // Magic variable.\n        'arguments,' +\n        // Everything in the current environment (835 items in Chrome,\n        // 104 in Node).\n        Object.getOwnPropertyNames(globalThis).join(',')\n    );\n  }\n\n  /**\n   * Initialise the database of variable names.\n   * @param {!Workspace} workspace Workspace to generate code from.\n   */\n  init(workspace) {\n    super.init(workspace);\n\n    if (!this.nameDB_) {\n      this.nameDB_ = new Names(this.RESERVED_WORDS_);\n    } else {\n      this.nameDB_.reset();\n    }\n\n    this.nameDB_.setVariableMap(workspace.getVariableMap());\n    this.nameDB_.populateVariables(workspace);\n    this.nameDB_.populateProcedures(workspace);\n\n    const defvars = [];\n    // Add developer variables (not created or named by the user).\n    const devVarList = Variables.allDeveloperVariables(workspace);\n    for (let i = 0; i < devVarList.length; i++) {\n      defvars.push(\n          this.nameDB_.getName(devVarList[i], NameType.DEVELOPER_VARIABLE));\n    }\n\n    // Add user variables, but only ones that are being used.\n    const variables = Variables.allUsedVarModels(workspace);\n    for (let i = 0; i < variables.length; i++) {\n      defvars.push(\n        this.nameDB_.getName(variables[i].getId(), NameType.VARIABLE));\n    }\n\n    // Declare all of the variables.\n    if (defvars.length) {\n      this.definitions_['variables'] = 'var ' + defvars.join(', ') + ';';\n    }\n    this.isInitialized = true;\n  }\n\n  /**\n   * Prepend the generated code with the variable definitions.\n   * @param {string} code Generated code.\n   * @return {string} Completed code.\n   */\n  finish(code) {\n    // Convert the definitions dictionary into a list.\n    const definitions = Object.values(this.definitions_);\n    // Call Blockly.CodeGenerator's finish.\n    super.finish(code);\n    this.isInitialized = false;\n\n    this.nameDB_.reset();\n    return definitions.join('\\n\\n') + '\\n\\n\\n' + code;\n  }\n\n  /**\n   * Naked values are top-level blocks with outputs that aren't plugged into\n   * anything.  A trailing semicolon is needed to make this legal.\n   * @param {string} line Line of generated code.\n   * @return {string} Legal line of code.\n   */\n  scrubNakedValue(line) {\n    return line + ';\\n';\n  }\n\n  /**\n   * Encode a string as a properly escaped JavaScript string, complete with\n   * quotes.\n   * @param {string} string Text to encode.\n   * @return {string} JavaScript string.\n   * @protected\n   */\n  quote_(string) {\n    // Can't use goog.string.quote since Google's style guide recommends\n    // JS string literals use single quotes.\n    string = string.replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\n/g, '\\\\\\n')\n        .replace(/'/g, '\\\\\\'');\n    return '\\'' + string + '\\'';\n  }\n\n  /**\n   * Encode a string as a properly escaped multiline JavaScript string, complete\n   * with quotes.\n   * @param {string} string Text to encode.\n   * @return {string} JavaScript string.\n   * @protected\n   */\n  multiline_quote_(string) {\n    // Can't use goog.string.quote since Google's style guide recommends\n    // JS string literals use single quotes.\n    const lines = string.split(/\\n/g).map(this.quote_);\n    return lines.join(' + \\'\\\\n\\' +\\n');\n  }\n\n  /**\n   * Common tasks for generating JavaScript from blocks.\n   * Handles comments for the specified block and any connected value blocks.\n   * Calls any statements following this block.\n   * @param {!Block} block The current block.\n   * @param {string} code The JavaScript code created for this block.\n   * @param {boolean=} opt_thisOnly True to generate code for only this\n   *     statement.\n   * @return {string} JavaScript code with comments and subsequent blocks added.\n   * @protected\n   */\n  scrub_(block, code, opt_thisOnly) {\n    let commentCode = '';\n    // Only collect comments for blocks that aren't inline.\n    if (!block.outputConnection || !block.outputConnection.targetConnection) {\n      // Collect comment for this block.\n      let comment = block.getCommentText();\n      if (comment) {\n        comment = stringUtils.wrap(comment, this.COMMENT_WRAP - 3);\n        commentCode += this.prefixLines(comment + '\\n', '// ');\n      }\n      // Collect comments for all value arguments.\n      // Don't collect comments for nested statements.\n      for (let i = 0; i < block.inputList.length; i++) {\n        if (block.inputList[i].type === inputTypes.VALUE) {\n          const childBlock = block.inputList[i].connection.targetBlock();\n          if (childBlock) {\n            comment = this.allNestedComments(childBlock);\n            if (comment) {\n              commentCode += this.prefixLines(comment, '// ');\n            }\n          }\n        }\n      }\n    }\n    const nextBlock =\n        block.nextConnection && block.nextConnection.targetBlock();\n    const nextCode = opt_thisOnly ? '' : this.blockToCode(nextBlock);\n    return commentCode + code + nextCode;\n  }\n\n  /**\n   * Gets a property and adjusts the value while taking into account indexing.\n   * @param {!Block} block The block.\n   * @param {string} atId The property ID of the element to get.\n   * @param {number=} opt_delta Value to add.\n   * @param {boolean=} opt_negate Whether to negate the value.\n   * @param {number=} opt_order The highest order acting on this value.\n   * @return {string|number}\n   */\n  getAdjusted(block, atId, opt_delta, opt_negate, opt_order) {\n    let delta = opt_delta || 0;\n    let order = opt_order || this.ORDER_NONE;\n    if (block.workspace.options.oneBasedIndex) {\n      delta--;\n    }\n    const defaultAtIndex = block.workspace.options.oneBasedIndex ? '1' : '0';\n\n    let innerOrder;\n    let outerOrder = order;\n    if (delta > 0) {\n      outerOrder = this.ORDER_ADDITION;\n      innerOrder = this.ORDER_ADDITION;\n    } else if (delta < 0) {\n      outerOrder = this.ORDER_SUBTRACTION;\n      innerOrder = this.ORDER_SUBTRACTION;\n    } else if (opt_negate) {\n      outerOrder = this.ORDER_UNARY_NEGATION;\n      innerOrder = this.ORDER_UNARY_NEGATION;\n    }\n\n    let at = this.valueToCode(block, atId, outerOrder) || defaultAtIndex;\n\n    if (stringUtils.isNumber(at)) {\n      // If the index is a naked number, adjust it right now.\n      at = Number(at) + delta;\n      if (opt_negate) {\n        at = -at;\n      }\n    } else {\n      // If the index is dynamic, adjust it in code.\n      if (delta > 0) {\n        at = at + ' + ' + delta;\n      } else if (delta < 0) {\n        at = at + ' - ' + -delta;\n      }\n      if (opt_negate) {\n        if (delta) {\n          at = '-(' + at + ')';\n        } else {\n          at = '-' + at;\n        }\n      }\n      innerOrder = Math.floor(innerOrder);\n      order = Math.floor(order);\n      if (innerOrder && order >= innerOrder) {\n        at = '(' + at + ')';\n      }\n    }\n    return at;\n  }\n}\n\n/**\n * JavaScript code generator instance.\n * @type {!JavascriptGenerator}\n */\nexport const javascriptGenerator = new JavascriptGenerator();\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for colour blocks.\n */\n\nimport * as goog from '../../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript.colour');\n\nimport {Order, javascriptGenerator} from '../javascript.js';\n\n\njavascriptGenerator.forBlock['colour_picker'] = function(block, generator) {\n  // Colour picker.\n  const code = generator.quote_(block.getFieldValue('COLOUR'));\n  return [code, Order.ATOMIC];\n};\n\njavascriptGenerator.forBlock['colour_random'] = function(block, generator) {\n  // Generate a random colour.\n  const functionName = generator.provideFunction_('colourRandom', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}() {\n  var num = Math.floor(Math.random() * Math.pow(2, 24));\n  return '#' + ('00000' + num.toString(16)).substr(-6);\n}\n`);\n  const code = functionName + '()';\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['colour_rgb'] = function(block, generator) {\n  // Compose a colour from RGB components expressed as percentages.\n  const red = generator.valueToCode(block, 'RED', Order.NONE) || 0;\n  const green =\n      generator.valueToCode(block, 'GREEN', Order.NONE) || 0;\n  const blue =\n      generator.valueToCode(block, 'BLUE', Order.NONE) || 0;\n  const functionName = generator.provideFunction_('colourRgb', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(r, g, b) {\n  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;\n  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;\n  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;\n  r = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);\n  g = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);\n  b = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);\n  return '#' + r + g + b;\n}\n`);\n  const code = functionName + '(' + red + ', ' + green + ', ' + blue + ')';\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['colour_blend'] = function(block, generator) {\n  // Blend two colours together.\n  const c1 = generator.valueToCode(block, 'COLOUR1', Order.NONE) ||\n      \"'#000000'\";\n  const c2 = generator.valueToCode(block, 'COLOUR2', Order.NONE) ||\n      \"'#000000'\";\n  const ratio =\n      generator.valueToCode(block, 'RATIO', Order.NONE) || 0.5;\n  const functionName = generator.provideFunction_('colourBlend', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(c1, c2, ratio) {\n  ratio = Math.max(Math.min(Number(ratio), 1), 0);\n  var r1 = parseInt(c1.substring(1, 3), 16);\n  var g1 = parseInt(c1.substring(3, 5), 16);\n  var b1 = parseInt(c1.substring(5, 7), 16);\n  var r2 = parseInt(c2.substring(1, 3), 16);\n  var g2 = parseInt(c2.substring(3, 5), 16);\n  var b2 = parseInt(c2.substring(5, 7), 16);\n  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);\n  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);\n  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);\n  r = ('0' + (r || 0).toString(16)).slice(-2);\n  g = ('0' + (g || 0).toString(16)).slice(-2);\n  b = ('0' + (b || 0).toString(16)).slice(-2);\n  return '#' + r + g + b;\n}\n`);\n  const code = functionName + '(' + c1 + ', ' + c2 + ', ' + ratio + ')';\n  return [code, Order.FUNCTION_CALL];\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for list blocks.\n * @suppress {missingRequire}\n */\n\nimport * as goog from '../../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript.lists');\n\nimport {NameType} from '../../core/names.js';\nimport {Order, javascriptGenerator} from '../javascript.js';\n\n\njavascriptGenerator.forBlock['lists_create_empty'] = function(block, generator) {\n  // Create an empty list.\n  return ['[]', Order.ATOMIC];\n};\n\njavascriptGenerator.forBlock['lists_create_with'] = function(block, generator) {\n  // Create a list with any number of elements of any type.\n  const elements = new Array(block.itemCount_);\n  for (let i = 0; i < block.itemCount_; i++) {\n    elements[i] =\n        generator.valueToCode(block, 'ADD' + i, Order.NONE) ||\n        'null';\n  }\n  const code = '[' + elements.join(', ') + ']';\n  return [code, Order.ATOMIC];\n};\n\njavascriptGenerator.forBlock['lists_repeat'] = function(block, generator) {\n  // Create a list with one element repeated.\n  const functionName = generator.provideFunction_('listsRepeat', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(value, n) {\n  var array = [];\n  for (var i = 0; i < n; i++) {\n    array[i] = value;\n  }\n  return array;\n}\n`);\n  const element =\n      generator.valueToCode(block, 'ITEM', Order.NONE) || 'null';\n  const repeatCount =\n      generator.valueToCode(block, 'NUM', Order.NONE) || '0';\n  const code = functionName + '(' + element + ', ' + repeatCount + ')';\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['lists_length'] = function(block, generator) {\n  // String or array length.\n  const list =\n      generator.valueToCode(block, 'VALUE', Order.MEMBER) || '[]';\n  return [list + '.length', Order.MEMBER];\n};\n\njavascriptGenerator.forBlock['lists_isEmpty'] = function(block, generator) {\n  // Is the string null or array empty?\n  const list =\n      generator.valueToCode(block, 'VALUE', Order.MEMBER) || '[]';\n  return ['!' + list + '.length', Order.LOGICAL_NOT];\n};\n\njavascriptGenerator.forBlock['lists_indexOf'] = function(block, generator) {\n  // Find an item in the list.\n  const operator =\n      block.getFieldValue('END') === 'FIRST' ? 'indexOf' : 'lastIndexOf';\n  const item =\n      generator.valueToCode(block, 'FIND', Order.NONE) || \"''\";\n  const list =\n      generator.valueToCode(block, 'VALUE', Order.MEMBER) || '[]';\n  const code = list + '.' + operator + '(' + item + ')';\n  if (block.workspace.options.oneBasedIndex) {\n    return [code + ' + 1', Order.ADDITION];\n  }\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['lists_getIndex'] = function(block, generator) {\n  // Get element at index.\n  // Note: Until January 2013 this block did not have MODE or WHERE inputs.\n  const mode = block.getFieldValue('MODE') || 'GET';\n  const where = block.getFieldValue('WHERE') || 'FROM_START';\n  const listOrder =\n      (where === 'RANDOM') ? Order.NONE : Order.MEMBER;\n  const list =\n      generator.valueToCode(block, 'VALUE', listOrder) || '[]';\n\n  switch (where) {\n    case ('FIRST'):\n      if (mode === 'GET') {\n        const code = list + '[0]';\n        return [code, Order.MEMBER];\n      } else if (mode === 'GET_REMOVE') {\n        const code = list + '.shift()';\n        return [code, Order.MEMBER];\n      } else if (mode === 'REMOVE') {\n        return list + '.shift();\\n';\n      }\n      break;\n    case ('LAST'):\n      if (mode === 'GET') {\n        const code = list + '.slice(-1)[0]';\n        return [code, Order.MEMBER];\n      } else if (mode === 'GET_REMOVE') {\n        const code = list + '.pop()';\n        return [code, Order.MEMBER];\n      } else if (mode === 'REMOVE') {\n        return list + '.pop();\\n';\n      }\n      break;\n    case ('FROM_START'): {\n      const at = generator.getAdjusted(block, 'AT');\n      if (mode === 'GET') {\n        const code = list + '[' + at + ']';\n        return [code, Order.MEMBER];\n      } else if (mode === 'GET_REMOVE') {\n        const code = list + '.splice(' + at + ', 1)[0]';\n        return [code, Order.FUNCTION_CALL];\n      } else if (mode === 'REMOVE') {\n        return list + '.splice(' + at + ', 1);\\n';\n      }\n      break;\n    }\n    case ('FROM_END'): {\n      const at = generator.getAdjusted(block, 'AT', 1, true);\n      if (mode === 'GET') {\n        const code = list + '.slice(' + at + ')[0]';\n        return [code, Order.FUNCTION_CALL];\n      } else if (mode === 'GET_REMOVE') {\n        const code = list + '.splice(' + at + ', 1)[0]';\n        return [code, Order.FUNCTION_CALL];\n      } else if (mode === 'REMOVE') {\n        return list + '.splice(' + at + ', 1);';\n      }\n      break;\n    }\n    case ('RANDOM'): {\n      const functionName =\n          generator.provideFunction_('listsGetRandomItem', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(list, remove) {\n  var x = Math.floor(Math.random() * list.length);\n  if (remove) {\n    return list.splice(x, 1)[0];\n  } else {\n    return list[x];\n  }\n}\n`);\n      const code = functionName + '(' + list + ', ' + (mode !== 'GET') + ')';\n      if (mode === 'GET' || mode === 'GET_REMOVE') {\n        return [code, Order.FUNCTION_CALL];\n      } else if (mode === 'REMOVE') {\n        return code + ';\\n';\n      }\n      break;\n    }\n  }\n  throw Error('Unhandled combination (lists_getIndex).');\n};\n\njavascriptGenerator.forBlock['lists_setIndex'] = function(block, generator) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  let list =\n      generator.valueToCode(block, 'LIST', Order.MEMBER) || '[]';\n  const mode = block.getFieldValue('MODE') || 'GET';\n  const where = block.getFieldValue('WHERE') || 'FROM_START';\n  const value =\n      generator.valueToCode(block, 'TO', Order.ASSIGNMENT) ||\n      'null';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    const listVar =\n        generator.nameDB_.getDistinctName(\n          'tmpList', NameType.VARIABLE);\n    const code = 'var ' + listVar + ' = ' + list + ';\\n';\n    list = listVar;\n    return code;\n  }\n  switch (where) {\n    case ('FIRST'):\n      if (mode === 'SET') {\n        return list + '[0] = ' + value + ';\\n';\n      } else if (mode === 'INSERT') {\n        return list + '.unshift(' + value + ');\\n';\n      }\n      break;\n    case ('LAST'):\n      if (mode === 'SET') {\n        let code = cacheList();\n        code += list + '[' + list + '.length - 1] = ' + value + ';\\n';\n        return code;\n      } else if (mode === 'INSERT') {\n        return list + '.push(' + value + ');\\n';\n      }\n      break;\n    case ('FROM_START'): {\n      const at = generator.getAdjusted(block, 'AT');\n      if (mode === 'SET') {\n        return list + '[' + at + '] = ' + value + ';\\n';\n      } else if (mode === 'INSERT') {\n        return list + '.splice(' + at + ', 0, ' + value + ');\\n';\n      }\n      break;\n    }\n    case ('FROM_END'): {\n      const at = generator.getAdjusted(\n          block, 'AT', 1, false, Order.SUBTRACTION);\n      let code = cacheList();\n      if (mode === 'SET') {\n        code += list + '[' + list + '.length - ' + at + '] = ' + value + ';\\n';\n        return code;\n      } else if (mode === 'INSERT') {\n        code += list + '.splice(' + list + '.length - ' + at + ', 0, ' + value +\n            ');\\n';\n        return code;\n      }\n      break;\n    }\n    case ('RANDOM'): {\n      let code = cacheList();\n      const xVar =\n          generator.nameDB_.getDistinctName(\n            'tmpX', NameType.VARIABLE);\n      code += 'var ' + xVar + ' = Math.floor(Math.random() * ' + list +\n          '.length);\\n';\n      if (mode === 'SET') {\n        code += list + '[' + xVar + '] = ' + value + ';\\n';\n        return code;\n      } else if (mode === 'INSERT') {\n        code += list + '.splice(' + xVar + ', 0, ' + value + ');\\n';\n        return code;\n      }\n      break;\n    }\n  }\n  throw Error('Unhandled combination (lists_setIndex).');\n};\n\n/**\n * Returns an expression calculating the index into a list.\n * @param {string} listName Name of the list, used to calculate length.\n * @param {string} where The method of indexing, selected by dropdown in Blockly\n * @param {string=} opt_at The optional offset when indexing from start/end.\n * @return {string|undefined} Index expression.\n */\nconst getSubstringIndex = function(listName, where, opt_at) {\n  if (where === 'FIRST') {\n    return '0';\n  } else if (where === 'FROM_END') {\n    return listName + '.length - 1 - ' + opt_at;\n  } else if (where === 'LAST') {\n    return listName + '.length - 1';\n  } else {\n    return opt_at;\n  }\n};\n\njavascriptGenerator.forBlock['lists_getSublist'] = function(block, generator) {\n  // Get sublist.\n  const list =\n      generator.valueToCode(block, 'LIST', Order.MEMBER) || '[]';\n  const where1 = block.getFieldValue('WHERE1');\n  const where2 = block.getFieldValue('WHERE2');\n  let code;\n  if (where1 === 'FIRST' && where2 === 'LAST') {\n    code = list + '.slice(0)';\n  } else if (\n      list.match(/^\\w+$/) ||\n      (where1 !== 'FROM_END' && where2 === 'FROM_START')) {\n    // If the list is a variable or doesn't require a call for length, don't\n    // generate a helper function.\n    let at1;\n    switch (where1) {\n      case 'FROM_START':\n        at1 = generator.getAdjusted(block, 'AT1');\n        break;\n      case 'FROM_END':\n        at1 = generator.getAdjusted(\n            block, 'AT1', 1, false, Order.SUBTRACTION);\n        at1 = list + '.length - ' + at1;\n        break;\n      case 'FIRST':\n        at1 = '0';\n        break;\n      default:\n        throw Error('Unhandled option (lists_getSublist).');\n    }\n    let at2;\n    switch (where2) {\n      case 'FROM_START':\n        at2 = generator.getAdjusted(block, 'AT2', 1);\n        break;\n      case 'FROM_END':\n        at2 = generator.getAdjusted(\n            block, 'AT2', 0, false, Order.SUBTRACTION);\n        at2 = list + '.length - ' + at2;\n        break;\n      case 'LAST':\n        at2 = list + '.length';\n        break;\n      default:\n        throw Error('Unhandled option (lists_getSublist).');\n    }\n    code = list + '.slice(' + at1 + ', ' + at2 + ')';\n  } else {\n    const at1 = generator.getAdjusted(block, 'AT1');\n    const at2 = generator.getAdjusted(block, 'AT2');\n    const wherePascalCase = {\n      'FIRST': 'First',\n      'LAST': 'Last',\n      'FROM_START': 'FromStart',\n      'FROM_END': 'FromEnd',\n    };\n    // The value for 'FROM_END' and'FROM_START' depends on `at` so\n    // we add it as a parameter.\n    const at1Param =\n        (where1 === 'FROM_END' || where1 === 'FROM_START') ? ', at1' : '';\n    const at2Param =\n        (where2 === 'FROM_END' || where2 === 'FROM_START') ? ', at2' : '';\n    const functionName = generator.provideFunction_(\n        'subsequence' + wherePascalCase[where1] + wherePascalCase[where2], `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(sequence${at1Param}${at2Param}) {\n  var start = ${getSubstringIndex('sequence', where1, 'at1')};\n  var end = ${getSubstringIndex('sequence', where2, 'at2')} + 1;\n  return sequence.slice(start, end);\n}\n`);\n    code = functionName + '(' + list +\n        // The value for 'FROM_END' and 'FROM_START' depends on `at` so we\n        // pass it.\n        ((where1 === 'FROM_END' || where1 === 'FROM_START') ? ', ' + at1 : '') +\n        ((where2 === 'FROM_END' || where2 === 'FROM_START') ? ', ' + at2 : '') +\n        ')';\n  }\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['lists_sort'] = function(block, generator) {\n  // Block for sorting a list.\n  const list =\n      generator.valueToCode(block, 'LIST', Order.FUNCTION_CALL) ||\n      '[]';\n  const direction = block.getFieldValue('DIRECTION') === '1' ? 1 : -1;\n  const type = block.getFieldValue('TYPE');\n  const getCompareFunctionName =\n      generator.provideFunction_('listsGetSortCompare', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(type, direction) {\n  var compareFuncs = {\n    'NUMERIC': function(a, b) {\n        return Number(a) - Number(b); },\n    'TEXT': function(a, b) {\n        return String(a) > String(b) ? 1 : -1; },\n    'IGNORE_CASE': function(a, b) {\n        return String(a).toLowerCase() > String(b).toLowerCase() ? 1 : -1; },\n  };\n  var compare = compareFuncs[type];\n  return function(a, b) { return compare(a, b) * direction; };\n}\n      `);\n  return [\n    list + '.slice().sort(' + getCompareFunctionName + '(\"' + type + '\", ' +\n        direction + '))',\n    Order.FUNCTION_CALL\n  ];\n};\n\njavascriptGenerator.forBlock['lists_split'] = function(block, generator) {\n  // Block for splitting text into a list, or joining a list into text.\n  let input = generator.valueToCode(block, 'INPUT', Order.MEMBER);\n  const delimiter =\n      generator.valueToCode(block, 'DELIM', Order.NONE) || \"''\";\n  const mode = block.getFieldValue('MODE');\n  let functionName;\n  if (mode === 'SPLIT') {\n    if (!input) {\n      input = \"''\";\n    }\n    functionName = 'split';\n  } else if (mode === 'JOIN') {\n    if (!input) {\n      input = '[]';\n    }\n    functionName = 'join';\n  } else {\n    throw Error('Unknown mode: ' + mode);\n  }\n  const code = input + '.' + functionName + '(' + delimiter + ')';\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['lists_reverse'] = function(block, generator) {\n  // Block for reversing a list.\n  const list =\n      generator.valueToCode(block, 'LIST', Order.FUNCTION_CALL) ||\n      '[]';\n  const code = list + '.slice().reverse()';\n  return [code, Order.FUNCTION_CALL];\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for logic blocks.\n */\n\nimport * as goog from '../../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript.logic');\n\nimport {Order, javascriptGenerator} from '../javascript.js';\n\n\njavascriptGenerator.forBlock['controls_if'] = function(block, generator) {\n  // If/elseif/else condition.\n  let n = 0;\n  let code = '';\n  if (generator.STATEMENT_PREFIX) {\n    // Automatic prefix insertion is switched off for this block.  Add manually.\n    code += generator.injectId(\n        generator.STATEMENT_PREFIX, block);\n  }\n  do {\n    const conditionCode =\n        generator.valueToCode(block, 'IF' + n, Order.NONE) ||\n        'false';\n    let branchCode = generator.statementToCode(block, 'DO' + n);\n    if (generator.STATEMENT_SUFFIX) {\n      branchCode = generator.prefixLines(\n          generator.injectId(\n            generator.STATEMENT_SUFFIX, block),\n          generator.INDENT) +\n          branchCode;\n    }\n    code += (n > 0 ? ' else ' : '') + 'if (' + conditionCode + ') {\\n' +\n        branchCode + '}';\n    n++;\n  } while (block.getInput('IF' + n));\n\n  if (block.getInput('ELSE') || generator.STATEMENT_SUFFIX) {\n    let branchCode = generator.statementToCode(block, 'ELSE');\n    if (generator.STATEMENT_SUFFIX) {\n      branchCode = generator.prefixLines(\n          generator.injectId(\n            generator.STATEMENT_SUFFIX, block),\n          generator.INDENT) +\n          branchCode;\n    }\n    code += ' else {\\n' + branchCode + '}';\n  }\n  return code + '\\n';\n};\n\njavascriptGenerator.forBlock['controls_ifelse'] =\n    javascriptGenerator.forBlock['controls_if'];\n\njavascriptGenerator.forBlock['logic_compare'] = function(block, generator) {\n  // Comparison operator.\n  const OPERATORS =\n      {'EQ': '==', 'NEQ': '!=', 'LT': '<', 'LTE': '<=', 'GT': '>', 'GTE': '>='};\n  const operator = OPERATORS[block.getFieldValue('OP')];\n  const order = (operator === '==' || operator === '!=') ?\n      Order.EQUALITY :\n      Order.RELATIONAL;\n  const argument0 = generator.valueToCode(block, 'A', order) || '0';\n  const argument1 = generator.valueToCode(block, 'B', order) || '0';\n  const code = argument0 + ' ' + operator + ' ' + argument1;\n  return [code, order];\n};\n\njavascriptGenerator.forBlock['logic_operation'] = function(block, generator) {\n  // Operations 'and', 'or'.\n  const operator = (block.getFieldValue('OP') === 'AND') ? '&&' : '||';\n  const order = (operator === '&&') ? Order.LOGICAL_AND :\n                                      Order.LOGICAL_OR;\n  let argument0 = generator.valueToCode(block, 'A', order);\n  let argument1 = generator.valueToCode(block, 'B', order);\n  if (!argument0 && !argument1) {\n    // If there are no arguments, then the return value is false.\n    argument0 = 'false';\n    argument1 = 'false';\n  } else {\n    // Single missing arguments have no effect on the return value.\n    const defaultArgument = (operator === '&&') ? 'true' : 'false';\n    if (!argument0) {\n      argument0 = defaultArgument;\n    }\n    if (!argument1) {\n      argument1 = defaultArgument;\n    }\n  }\n  const code = argument0 + ' ' + operator + ' ' + argument1;\n  return [code, order];\n};\n\njavascriptGenerator.forBlock['logic_negate'] = function(block, generator) {\n  // Negation.\n  const order = Order.LOGICAL_NOT;\n  const argument0 =\n      generator.valueToCode(block, 'BOOL', order) || 'true';\n  const code = '!' + argument0;\n  return [code, order];\n};\n\njavascriptGenerator.forBlock['logic_boolean'] = function(block, generator) {\n  // Boolean values true and false.\n  const code = (block.getFieldValue('BOOL') === 'TRUE') ? 'true' : 'false';\n  return [code, Order.ATOMIC];\n};\n\njavascriptGenerator.forBlock['logic_null'] = function(block, generator) {\n  // Null data type.\n  return ['null', Order.ATOMIC];\n};\n\njavascriptGenerator.forBlock['logic_ternary'] = function(block, generator) {\n  // Ternary operator.\n  const value_if =\n      generator.valueToCode(block, 'IF', Order.CONDITIONAL) ||\n      'false';\n  const value_then =\n      generator.valueToCode(block, 'THEN', Order.CONDITIONAL) ||\n      'null';\n  const value_else =\n      generator.valueToCode(block, 'ELSE', Order.CONDITIONAL) ||\n      'null';\n  const code = value_if + ' ? ' + value_then + ' : ' + value_else;\n  return [code, Order.CONDITIONAL];\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for loop blocks.\n */\n\nimport * as goog from '../../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript.loops');\n\nimport * as stringUtils from '../../core/utils/string.js';\nimport {NameType} from '../../core/names.js';\nimport {Order, javascriptGenerator} from '../javascript.js';\n\n\njavascriptGenerator.forBlock['controls_repeat_ext'] = function(block, generator) {\n  // Repeat n times.\n  let repeats;\n  if (block.getField('TIMES')) {\n    // Internal number.\n    repeats = String(Number(block.getFieldValue('TIMES')));\n  } else {\n    // External number.\n    repeats =\n        generator.valueToCode(block, 'TIMES', Order.ASSIGNMENT) ||\n        '0';\n  }\n  let branch = generator.statementToCode(block, 'DO');\n  branch = generator.addLoopTrap(branch, block);\n  let code = '';\n  const loopVar =\n      generator.nameDB_.getDistinctName('count', NameType.VARIABLE);\n  let endVar = repeats;\n  if (!repeats.match(/^\\w+$/) && !stringUtils.isNumber(repeats)) {\n    endVar =\n        generator.nameDB_.getDistinctName(\n          'repeat_end', NameType.VARIABLE);\n    code += 'var ' + endVar + ' = ' + repeats + ';\\n';\n  }\n  code += 'for (var ' + loopVar + ' = 0; ' + loopVar + ' < ' + endVar + '; ' +\n      loopVar + '++) {\\n' + branch + '}\\n';\n  return code;\n};\n\njavascriptGenerator.forBlock['controls_repeat'] =\n    javascriptGenerator.forBlock['controls_repeat_ext'];\n\njavascriptGenerator.forBlock['controls_whileUntil'] = function(block, generator) {\n  // Do while/until loop.\n  const until = block.getFieldValue('MODE') === 'UNTIL';\n  let argument0 =\n      generator.valueToCode(\n          block, 'BOOL',\n          until ? Order.LOGICAL_NOT : Order.NONE) ||\n      'false';\n  let branch = generator.statementToCode(block, 'DO');\n  branch = generator.addLoopTrap(branch, block);\n  if (until) {\n    argument0 = '!' + argument0;\n  }\n  return 'while (' + argument0 + ') {\\n' + branch + '}\\n';\n};\n\njavascriptGenerator.forBlock['controls_for'] = function(block, generator) {\n  // For loop.\n  const variable0 =\n      generator.nameDB_.getName(\n        block.getFieldValue('VAR'), NameType.VARIABLE);\n  const argument0 =\n      generator.valueToCode(block, 'FROM', Order.ASSIGNMENT) || '0';\n  const argument1 =\n      generator.valueToCode(block, 'TO', Order.ASSIGNMENT) || '0';\n  const increment =\n      generator.valueToCode(block, 'BY', Order.ASSIGNMENT) || '1';\n  let branch = generator.statementToCode(block, 'DO');\n  branch = generator.addLoopTrap(branch, block);\n  let code;\n  if (stringUtils.isNumber(argument0) && stringUtils.isNumber(argument1) &&\n      stringUtils.isNumber(increment)) {\n    // All arguments are simple numbers.\n    const up = Number(argument0) <= Number(argument1);\n    code = 'for (' + variable0 + ' = ' + argument0 + '; ' + variable0 +\n        (up ? ' <= ' : ' >= ') + argument1 + '; ' + variable0;\n    const step = Math.abs(Number(increment));\n    if (step === 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    let startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !stringUtils.isNumber(argument0)) {\n      startVar = generator.nameDB_.getDistinctName(\n          variable0 + '_start', NameType.VARIABLE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    let endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !stringUtils.isNumber(argument1)) {\n      endVar = generator.nameDB_.getDistinctName(\n          variable0 + '_end', NameType.VARIABLE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    const incVar = generator.nameDB_.getDistinctName(\n        variable0 + '_inc', NameType.VARIABLE);\n    code += 'var ' + incVar + ' = ';\n    if (stringUtils.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += generator.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' + incVar +\n        ' >= 0 ? ' + variable0 + ' <= ' + endVar + ' : ' + variable0 +\n        ' >= ' + endVar + '; ' + variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\njavascriptGenerator.forBlock['controls_forEach'] = function(block, generator) {\n  // For each loop.\n  const variable0 =\n      generator.nameDB_.getName(\n        block.getFieldValue('VAR'), NameType.VARIABLE);\n  const argument0 =\n      generator.valueToCode(block, 'LIST', Order.ASSIGNMENT) ||\n      '[]';\n  let branch = generator.statementToCode(block, 'DO');\n  branch = generator.addLoopTrap(branch, block);\n  let code = '';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  let listVar = argument0;\n  if (!argument0.match(/^\\w+$/)) {\n    listVar = generator.nameDB_.getDistinctName(\n        variable0 + '_list', NameType.VARIABLE);\n    code += 'var ' + listVar + ' = ' + argument0 + ';\\n';\n  }\n  const indexVar = generator.nameDB_.getDistinctName(\n      variable0 + '_index', NameType.VARIABLE);\n  branch = generator.INDENT + variable0 + ' = ' + listVar +\n      '[' + indexVar + '];\\n' + branch;\n  code += 'for (var ' + indexVar + ' in ' + listVar + ') {\\n' + branch + '}\\n';\n  return code;\n};\n\njavascriptGenerator.forBlock['controls_flow_statements'] = function(block, generator) {\n  // Flow statements: continue, break.\n  let xfix = '';\n  if (generator.STATEMENT_PREFIX) {\n    // Automatic prefix insertion is switched off for this block.  Add manually.\n    xfix += generator.injectId(\n        generator.STATEMENT_PREFIX, block);\n  }\n  if (generator.STATEMENT_SUFFIX) {\n    // Inject any statement suffix here since the regular one at the end\n    // will not get executed if the break/continue is triggered.\n    xfix += generator.injectId(\n        generator.STATEMENT_SUFFIX, block);\n  }\n  if (generator.STATEMENT_PREFIX) {\n    const loop = block.getSurroundLoop();\n    if (loop && !loop.suppressPrefixSuffix) {\n      // Inject loop's statement prefix here since the regular one at the end\n      // of the loop will not get executed if 'continue' is triggered.\n      // In the case of 'break', a prefix is needed due to the loop's suffix.\n      xfix += generator.injectId(\n          generator.STATEMENT_PREFIX, loop);\n    }\n  }\n  switch (block.getFieldValue('FLOW')) {\n    case 'BREAK':\n      return xfix + 'break;\\n';\n    case 'CONTINUE':\n      return xfix + 'continue;\\n';\n  }\n  throw Error('Unknown flow statement.');\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for math blocks.\n * @suppress {missingRequire}\n */\n\nimport * as goog from '../../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript.math');\n\nimport {NameType} from '../../core/names.js';\nimport {Order, javascriptGenerator} from '../javascript.js';\n\n\njavascriptGenerator.forBlock['math_number'] = function(block, generator) {\n  // Numeric value.\n  const code = Number(block.getFieldValue('NUM'));\n  const order = code >= 0 ? Order.ATOMIC :\n              Order.UNARY_NEGATION;\n  return [code, order];\n};\n\njavascriptGenerator.forBlock['math_arithmetic'] = function(block, generator) {\n  // Basic arithmetic operators, and power.\n  const OPERATORS = {\n    'ADD': [' + ', Order.ADDITION],\n    'MINUS': [' - ', Order.SUBTRACTION],\n    'MULTIPLY': [' * ', Order.MULTIPLICATION],\n    'DIVIDE': [' / ', Order.DIVISION],\n    'POWER': [null, Order.NONE],  // Handle power separately.\n  };\n  const tuple = OPERATORS[block.getFieldValue('OP')];\n  const operator = tuple[0];\n  const order = tuple[1];\n  const argument0 = generator.valueToCode(block, 'A', order) || '0';\n  const argument1 = generator.valueToCode(block, 'B', order) || '0';\n  let code;\n  // Power in JavaScript requires a special case since it has no operator.\n  if (!operator) {\n    code = 'Math.pow(' + argument0 + ', ' + argument1 + ')';\n    return [code, Order.FUNCTION_CALL];\n  }\n  code = argument0 + operator + argument1;\n  return [code, order];\n};\n\njavascriptGenerator.forBlock['math_single'] = function(block, generator) {\n  // Math operators with single operand.\n  const operator = block.getFieldValue('OP');\n  let code;\n  let arg;\n  if (operator === 'NEG') {\n    // Negation is a special case given its different operator precedence.\n    arg = generator.valueToCode(block, 'NUM',\n        Order.UNARY_NEGATION) || '0';\n    if (arg[0] === '-') {\n      // --3 is not legal in JS.\n      arg = ' ' + arg;\n    }\n    code = '-' + arg;\n    return [code, Order.UNARY_NEGATION];\n  }\n  if (operator === 'SIN' || operator === 'COS' || operator === 'TAN') {\n    arg = generator.valueToCode(block, 'NUM',\n        Order.DIVISION) || '0';\n  } else {\n    arg = generator.valueToCode(block, 'NUM',\n        Order.NONE) || '0';\n  }\n  // First, handle cases which generate values that don't need parentheses\n  // wrapping the code.\n  switch (operator) {\n    case 'ABS':\n      code = 'Math.abs(' + arg + ')';\n      break;\n    case 'ROOT':\n      code = 'Math.sqrt(' + arg + ')';\n      break;\n    case 'LN':\n      code = 'Math.log(' + arg + ')';\n      break;\n    case 'EXP':\n      code = 'Math.exp(' + arg + ')';\n      break;\n    case 'POW10':\n      code = 'Math.pow(10,' + arg + ')';\n      break;\n    case 'ROUND':\n      code = 'Math.round(' + arg + ')';\n      break;\n    case 'ROUNDUP':\n      code = 'Math.ceil(' + arg + ')';\n      break;\n    case 'ROUNDDOWN':\n      code = 'Math.floor(' + arg + ')';\n      break;\n    case 'SIN':\n      code = 'Math.sin(' + arg + ' / 180 * Math.PI)';\n      break;\n    case 'COS':\n      code = 'Math.cos(' + arg + ' / 180 * Math.PI)';\n      break;\n    case 'TAN':\n      code = 'Math.tan(' + arg + ' / 180 * Math.PI)';\n      break;\n  }\n  if (code) {\n    return [code, Order.FUNCTION_CALL];\n  }\n  // Second, handle cases which generate values that may need parentheses\n  // wrapping the code.\n  switch (operator) {\n    case 'LOG10':\n      code = 'Math.log(' + arg + ') / Math.log(10)';\n      break;\n    case 'ASIN':\n      code = 'Math.asin(' + arg + ') / Math.PI * 180';\n      break;\n    case 'ACOS':\n      code = 'Math.acos(' + arg + ') / Math.PI * 180';\n      break;\n    case 'ATAN':\n      code = 'Math.atan(' + arg + ') / Math.PI * 180';\n      break;\n    default:\n      throw Error('Unknown math operator: ' + operator);\n  }\n  return [code, Order.DIVISION];\n};\n\njavascriptGenerator.forBlock['math_constant'] = function(block, generator) {\n  // Constants: PI, E, the Golden Ratio, sqrt(2), 1/sqrt(2), INFINITY.\n  const CONSTANTS = {\n    'PI': ['Math.PI', Order.MEMBER],\n    'E': ['Math.E', Order.MEMBER],\n    'GOLDEN_RATIO': ['(1 + Math.sqrt(5)) / 2', Order.DIVISION],\n    'SQRT2': ['Math.SQRT2', Order.MEMBER],\n    'SQRT1_2': ['Math.SQRT1_2', Order.MEMBER],\n    'INFINITY': ['Infinity', Order.ATOMIC],\n  };\n  return CONSTANTS[block.getFieldValue('CONSTANT')];\n};\n\njavascriptGenerator.forBlock['math_number_property'] = function(block, generator) {\n  // Check if a number is even, odd, prime, whole, positive, or negative\n  // or if it is divisible by certain number. Returns true or false.\n  const PROPERTIES = {\n    'EVEN': [' % 2 === 0', Order.MODULUS, Order.EQUALITY],\n    'ODD': [' % 2 === 1', Order.MODULUS, Order.EQUALITY],\n    'WHOLE': [' % 1 === 0', Order.MODULUS,\n        Order.EQUALITY],\n    'POSITIVE': [' > 0', Order.RELATIONAL,\n        Order.RELATIONAL],\n    'NEGATIVE': [' < 0', Order.RELATIONAL,\n        Order.RELATIONAL],\n    'DIVISIBLE_BY': [null, Order.MODULUS, Order.EQUALITY],\n    'PRIME': [null, Order.NONE, Order.FUNCTION_CALL],\n  };\n  const dropdownProperty = block.getFieldValue('PROPERTY');\n  const [suffix, inputOrder, outputOrder] = PROPERTIES[dropdownProperty];\n  const numberToCheck =\n      generator.valueToCode(block, 'NUMBER_TO_CHECK', inputOrder) ||\n      '0';\n  let code;\n  if (dropdownProperty === 'PRIME') {\n    // Prime is a special case as it is not a one-liner test.\n    const functionName = generator.provideFunction_('mathIsPrime', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(n) {\n  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\n  if (n == 2 || n == 3) {\n    return true;\n  }\n  // False if n is NaN, negative, is 1, or not whole.\n  // And false if n is divisible by 2 or 3.\n  if (isNaN(n) || n <= 1 || n % 1 !== 0 || n % 2 === 0 || n % 3 === 0) {\n    return false;\n  }\n  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\n  for (var x = 6; x <= Math.sqrt(n) + 1; x += 6) {\n    if (n % (x - 1) === 0 || n % (x + 1) === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n`);\n    code = functionName + '(' + numberToCheck + ')';\n  } else if (dropdownProperty === 'DIVISIBLE_BY') {\n    const divisor = generator.valueToCode(block, 'DIVISOR',\n        Order.MODULUS) || '0';\n    code = numberToCheck + ' % ' + divisor + ' === 0';\n  } else {\n    code = numberToCheck + suffix;\n  }\n  return [code, outputOrder];\n};\n\njavascriptGenerator.forBlock['math_change'] = function(block, generator) {\n  // Add to a variable in place.\n  const argument0 = generator.valueToCode(block, 'DELTA',\n      Order.ADDITION) || '0';\n  const varName = generator.nameDB_.getName(\n      block.getFieldValue('VAR'), NameType.VARIABLE);\n  return varName + ' = (typeof ' + varName + ' === \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n};\n\n// Rounding functions have a single operand.\njavascriptGenerator.forBlock['math_round'] =\n    javascriptGenerator.forBlock['math_single'];\n// Trigonometry functions have a single operand.\njavascriptGenerator.forBlock['math_trig'] =\n    javascriptGenerator.forBlock['math_single'];\n\njavascriptGenerator.forBlock['math_on_list'] = function(block, generator) {\n  // Math functions for lists.\n  const func = block.getFieldValue('OP');\n  let list;\n  let code;\n  switch (func) {\n    case 'SUM':\n      list = generator.valueToCode(block, 'LIST',\n          Order.MEMBER) || '[]';\n      code = list + '.reduce(function(x, y) {return x + y;}, 0)';\n      break;\n    case 'MIN':\n      list = generator.valueToCode(block, 'LIST',\n          Order.NONE) || '[]';\n      code = 'Math.min.apply(null, ' + list + ')';\n      break;\n    case 'MAX':\n      list = generator.valueToCode(block, 'LIST',\n          Order.NONE) || '[]';\n      code = 'Math.max.apply(null, ' + list + ')';\n      break;\n    case 'AVERAGE': {\n      // mathMean([null,null,1,3]) === 2.0.\n      const functionName = generator.provideFunction_('mathMean', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(myList) {\n  return myList.reduce(function(x, y) {return x + y;}, 0) / myList.length;\n}\n`);\n      list = generator.valueToCode(block, 'LIST',\n          Order.NONE) || '[]';\n      code = functionName + '(' + list + ')';\n      break;\n    }\n    case 'MEDIAN': {\n      // mathMedian([null,null,1,3]) === 2.0.\n      const functionName = generator.provideFunction_('mathMedian', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(myList) {\n  var localList = myList.filter(function (x) {return typeof x === 'number';});\n  if (!localList.length) return null;\n  localList.sort(function(a, b) {return b - a;});\n  if (localList.length % 2 === 0) {\n    return (localList[localList.length / 2 - 1] + localList[localList.length / 2]) / 2;\n  } else {\n    return localList[(localList.length - 1) / 2];\n  }\n}\n`);\n      list = generator.valueToCode(block, 'LIST',\n          Order.NONE) || '[]';\n      code = functionName + '(' + list + ')';\n      break;\n    }\n    case 'MODE': {\n      // As a list of numbers can contain more than one mode,\n      // the returned result is provided as an array.\n      // Mode of [3, 'x', 'x', 1, 1, 2, '3'] -> ['x', 1].\n      const functionName = generator.provideFunction_('mathModes', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(values) {\n  var modes = [];\n  var counts = [];\n  var maxCount = 0;\n  for (var i = 0; i < values.length; i++) {\n    var value = values[i];\n    var found = false;\n    var thisCount;\n    for (var j = 0; j < counts.length; j++) {\n      if (counts[j][0] === value) {\n        thisCount = ++counts[j][1];\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      counts.push([value, 1]);\n      thisCount = 1;\n    }\n    maxCount = Math.max(thisCount, maxCount);\n  }\n  for (var j = 0; j < counts.length; j++) {\n    if (counts[j][1] === maxCount) {\n        modes.push(counts[j][0]);\n    }\n  }\n  return modes;\n}\n`);\n      list = generator.valueToCode(block, 'LIST',\n          Order.NONE) || '[]';\n      code = functionName + '(' + list + ')';\n      break;\n    }\n    case 'STD_DEV': {\n      const functionName =\n          generator.provideFunction_('mathStandardDeviation', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(numbers) {\n  var n = numbers.length;\n  if (!n) return null;\n  var mean = numbers.reduce(function(x, y) {return x + y;}) / n;\n  var variance = 0;\n  for (var j = 0; j < n; j++) {\n    variance += Math.pow(numbers[j] - mean, 2);\n  }\n  variance = variance / n;\n  return Math.sqrt(variance);\n}\n`);\n      list = generator.valueToCode(block, 'LIST',\n          Order.NONE) || '[]';\n      code = functionName + '(' + list + ')';\n      break;\n    }\n    case 'RANDOM': {\n      const functionName =\n          generator.provideFunction_('mathRandomList', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(list) {\n  var x = Math.floor(Math.random() * list.length);\n  return list[x];\n}\n`);\n      list = generator.valueToCode(block, 'LIST',\n          Order.NONE) || '[]';\n      code = functionName + '(' + list + ')';\n      break;\n    }\n    default:\n      throw Error('Unknown operator: ' + func);\n  }\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['math_modulo'] = function(block, generator) {\n  // Remainder computation.\n  const argument0 = generator.valueToCode(block, 'DIVIDEND',\n      Order.MODULUS) || '0';\n  const argument1 = generator.valueToCode(block, 'DIVISOR',\n      Order.MODULUS) || '0';\n  const code = argument0 + ' % ' + argument1;\n  return [code, Order.MODULUS];\n};\n\njavascriptGenerator.forBlock['math_constrain'] = function(block, generator) {\n  // Constrain a number between two limits.\n  const argument0 = generator.valueToCode(block, 'VALUE',\n      Order.NONE) || '0';\n  const argument1 = generator.valueToCode(block, 'LOW',\n      Order.NONE) || '0';\n  const argument2 = generator.valueToCode(block, 'HIGH',\n      Order.NONE) || 'Infinity';\n  const code = 'Math.min(Math.max(' + argument0 + ', ' + argument1 + '), ' +\n      argument2 + ')';\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['math_random_int'] = function(block, generator) {\n  // Random integer between [X] and [Y].\n  const argument0 = generator.valueToCode(block, 'FROM',\n      Order.NONE) || '0';\n  const argument1 = generator.valueToCode(block, 'TO',\n      Order.NONE) || '0';\n  const functionName = generator.provideFunction_('mathRandomInt', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(a, b) {\n  if (a > b) {\n    // Swap a and b to ensure a is smaller.\n    var c = a;\n    a = b;\n    b = c;\n  }\n  return Math.floor(Math.random() * (b - a + 1) + a);\n}\n`);\n  const code = functionName + '(' + argument0 + ', ' + argument1 + ')';\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['math_random_float'] = function(block, generator) {\n  // Random fraction between 0 and 1.\n  return ['Math.random()', Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['math_atan2'] = function(block, generator) {\n  // Arctangent of point (X, Y) in degrees from -180 to 180.\n  const argument0 = generator.valueToCode(block, 'X',\n      Order.NONE) || '0';\n  const argument1 = generator.valueToCode(block, 'Y',\n      Order.NONE) || '0';\n  return ['Math.atan2(' + argument1 + ', ' + argument0 + ') / Math.PI * 180',\n      Order.DIVISION];\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for procedure blocks.\n */\n\nimport * as goog from '../../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript.procedures');\n\nimport {NameType} from '../../core/names.js';\nimport {Order, javascriptGenerator} from '../javascript.js';\n\n\njavascriptGenerator.forBlock['procedures_defreturn'] = function(block, generator) {\n  // Define a procedure with a return value.\n  const funcName = generator.nameDB_.getName(\n      block.getFieldValue('NAME'), NameType.PROCEDURE);\n  let xfix1 = '';\n  if (generator.STATEMENT_PREFIX) {\n    xfix1 += generator.injectId(\n        generator.STATEMENT_PREFIX, block);\n  }\n  if (generator.STATEMENT_SUFFIX) {\n    xfix1 += generator.injectId(\n        generator.STATEMENT_SUFFIX, block);\n  }\n  if (xfix1) {\n    xfix1 = generator.prefixLines(xfix1, generator.INDENT);\n  }\n  let loopTrap = '';\n  if (generator.INFINITE_LOOP_TRAP) {\n    loopTrap = generator.prefixLines(\n        generator.injectId(\n          generator.INFINITE_LOOP_TRAP, block),\n        generator.INDENT);\n  }\n  const branch = generator.statementToCode(block, 'STACK');\n  let returnValue =\n      generator.valueToCode(block, 'RETURN', Order.NONE) || '';\n  let xfix2 = '';\n  if (branch && returnValue) {\n    // After executing the function body, revisit this block for the return.\n    xfix2 = xfix1;\n  }\n  if (returnValue) {\n    returnValue = generator.INDENT + 'return ' + returnValue + ';\\n';\n  }\n  const args = [];\n  const variables = block.getVars();\n  for (let i = 0; i < variables.length; i++) {\n    args[i] =\n        generator.nameDB_.getName(variables[i], NameType.VARIABLE);\n  }\n  let code = 'function ' + funcName + '(' + args.join(', ') + ') {\\n' + xfix1 +\n      loopTrap + branch + xfix2 + returnValue + '}';\n  code = generator.scrub_(block, code);\n  // Add % so as not to collide with helper functions in definitions list.\n  generator.definitions_['%' + funcName] = code;\n  return null;\n};\n\n// Defining a procedure without a return value uses the same generator as\n// a procedure with a return value.\njavascriptGenerator.forBlock['procedures_defnoreturn'] =\n    javascriptGenerator.forBlock['procedures_defreturn'];\n\njavascriptGenerator.forBlock['procedures_callreturn'] = function(block, generator) {\n  // Call a procedure with a return value.\n  const funcName = generator.nameDB_.getName(\n      block.getFieldValue('NAME'), NameType.PROCEDURE);\n  const args = [];\n  const variables = block.getVars();\n  for (let i = 0; i < variables.length; i++) {\n    args[i] = generator.valueToCode(block, 'ARG' + i, Order.NONE) ||\n        'null';\n  }\n  const code = funcName + '(' + args.join(', ') + ')';\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['procedures_callnoreturn'] = function(block, generator) {\n  // Call a procedure with no return value.\n  // Generated code is for a function call as a statement is the same as a\n  // function call as a value, with the addition of line ending.\n  const tuple = generator.forBlock['procedures_callreturn'](block, generator);\n  return tuple[0] + ';\\n';\n};\n\njavascriptGenerator.forBlock['procedures_ifreturn'] = function(block, generator) {\n  // Conditionally return value from a procedure.\n  const condition =\n      generator.valueToCode(block, 'CONDITION', Order.NONE) ||\n      'false';\n  let code = 'if (' + condition + ') {\\n';\n  if (generator.STATEMENT_SUFFIX) {\n    // Inject any statement suffix here since the regular one at the end\n    // will not get executed if the return is triggered.\n    code += generator.prefixLines(\n        generator.injectId(\n          generator.STATEMENT_SUFFIX, block),\n        generator.INDENT);\n  }\n  if (block.hasReturnValue_) {\n    const value =\n        generator.valueToCode(block, 'VALUE', Order.NONE) || 'null';\n    code += generator.INDENT + 'return ' + value + ';\\n';\n  } else {\n    code += generator.INDENT + 'return;\\n';\n  }\n  code += '}\\n';\n  return code;\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for text blocks.\n */\n\nimport * as goog from '../../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript.texts');\n\nimport {NameType} from '../../core/names.js';\nimport {Order, javascriptGenerator} from '../javascript.js';\n\n\n/**\n * Regular expression to detect a single-quoted string literal.\n */\nconst strRegExp = /^\\s*'([^']|\\\\')*'\\s*$/;\n\n/**\n * Enclose the provided value in 'String(...)' function.\n * Leave string literals alone.\n * @param {string} value Code evaluating to a value.\n * @return {Array<string|number>} Array containing code evaluating to a string\n *     and the order of the returned code.[string, number]\n */\nconst forceString = function(value) {\n  if (strRegExp.test(value)) {\n    return [value, Order.ATOMIC];\n  }\n  return ['String(' + value + ')', Order.FUNCTION_CALL];\n};\n\n/**\n * Returns an expression calculating the index into a string.\n * @param {string} stringName Name of the string, used to calculate length.\n * @param {string} where The method of indexing, selected by dropdown in Blockly\n * @param {string=} opt_at The optional offset when indexing from start/end.\n * @return {string|undefined} Index expression.\n */\nconst getSubstringIndex = function(stringName, where, opt_at) {\n  if (where === 'FIRST') {\n    return '0';\n  } else if (where === 'FROM_END') {\n    return stringName + '.length - 1 - ' + opt_at;\n  } else if (where === 'LAST') {\n    return stringName + '.length - 1';\n  } else {\n    return opt_at;\n  }\n};\n\njavascriptGenerator.forBlock['text'] = function(block, generator) {\n  // Text value.\n  const code = generator.quote_(block.getFieldValue('TEXT'));\n  return [code, Order.ATOMIC];\n};\n\njavascriptGenerator.forBlock['text_multiline'] = function(block, generator) {\n  // Text value.\n  const code =\n      generator.multiline_quote_(block.getFieldValue('TEXT'));\n  const order = code.indexOf('+') !== -1 ? Order.ADDITION :\n      Order.ATOMIC;\n  return [code, order];\n};\n\njavascriptGenerator.forBlock['text_join'] = function(block, generator) {\n  // Create a string made up of any number of elements of any type.\n  switch (block.itemCount_) {\n    case 0:\n      return [\"''\", Order.ATOMIC];\n    case 1: {\n      const element = generator.valueToCode(block, 'ADD0',\n          Order.NONE) || \"''\";\n      const codeAndOrder = forceString(element);\n      return codeAndOrder;\n    }\n    case 2: {\n      const element0 = generator.valueToCode(block, 'ADD0',\n          Order.NONE) || \"''\";\n      const element1 = generator.valueToCode(block, 'ADD1',\n          Order.NONE) || \"''\";\n      const code = forceString(element0)[0] +\n          ' + ' + forceString(element1)[0];\n      return [code, Order.ADDITION];\n    }\n    default: {\n      const elements = new Array(block.itemCount_);\n      for (let i = 0; i < block.itemCount_; i++) {\n        elements[i] = generator.valueToCode(block, 'ADD' + i,\n            Order.NONE) || \"''\";\n      }\n      const code = '[' + elements.join(',') + '].join(\\'\\')';\n      return [code, Order.FUNCTION_CALL];\n    }\n  }\n};\n\njavascriptGenerator.forBlock['text_append'] = function(block, generator) {\n  // Append to a variable in place.\n  const varName = generator.nameDB_.getName(\n      block.getFieldValue('VAR'), NameType.VARIABLE);\n  const value = generator.valueToCode(block, 'TEXT',\n      Order.NONE) || \"''\";\n  const code = varName + ' += ' +\n      forceString(value)[0] + ';\\n';\n  return code;\n};\n\njavascriptGenerator.forBlock['text_length'] = function(block, generator) {\n  // String or array length.\n  const text = generator.valueToCode(block, 'VALUE',\n      Order.MEMBER) || \"''\";\n  return [text + '.length', Order.MEMBER];\n};\n\njavascriptGenerator.forBlock['text_isEmpty'] = function(block, generator) {\n  // Is the string null or array empty?\n  const text = generator.valueToCode(block, 'VALUE',\n      Order.MEMBER) || \"''\";\n  return ['!' + text + '.length', Order.LOGICAL_NOT];\n};\n\njavascriptGenerator.forBlock['text_indexOf'] = function(block, generator) {\n  // Search the text for a substring.\n  const operator = block.getFieldValue('END') === 'FIRST' ?\n      'indexOf' : 'lastIndexOf';\n  const substring = generator.valueToCode(block, 'FIND',\n      Order.NONE) || \"''\";\n  const text = generator.valueToCode(block, 'VALUE',\n      Order.MEMBER) || \"''\";\n  const code = text + '.' + operator + '(' + substring + ')';\n  // Adjust index if using one-based indices.\n  if (block.workspace.options.oneBasedIndex) {\n    return [code + ' + 1', Order.ADDITION];\n  }\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['text_charAt'] = function(block, generator) {\n  // Get letter at index.\n  // Note: Until January 2013 this block did not have the WHERE input.\n  const where = block.getFieldValue('WHERE') || 'FROM_START';\n  const textOrder = (where === 'RANDOM') ? Order.NONE :\n      Order.MEMBER;\n  const text =\n      generator.valueToCode(block, 'VALUE', textOrder) || \"''\";\n  switch (where) {\n    case 'FIRST': {\n      const code = text + '.charAt(0)';\n      return [code, Order.FUNCTION_CALL];\n    }\n    case 'LAST': {\n      const code = text + '.slice(-1)';\n      return [code, Order.FUNCTION_CALL];\n    }\n    case 'FROM_START': {\n      const at = generator.getAdjusted(block, 'AT');\n      // Adjust index if using one-based indices.\n      const code = text + '.charAt(' + at + ')';\n      return [code, Order.FUNCTION_CALL];\n    }\n    case 'FROM_END': {\n      const at = generator.getAdjusted(block, 'AT', 1, true);\n      const code = text + '.slice(' + at + ').charAt(0)';\n      return [code, Order.FUNCTION_CALL];\n    }\n    case 'RANDOM': {\n      const functionName =\n          generator.provideFunction_('textRandomLetter', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(text) {\n  var x = Math.floor(Math.random() * text.length);\n  return text[x];\n}\n`);\n      const code = functionName + '(' + text + ')';\n      return [code, Order.FUNCTION_CALL];\n    }\n  }\n  throw Error('Unhandled option (text_charAt).');\n};\n\njavascriptGenerator.forBlock['text_getSubstring'] = function(block, generator) {\n  // Get substring.\n  const where1 = block.getFieldValue('WHERE1');\n  const where2 = block.getFieldValue('WHERE2');\n  const requiresLengthCall = (where1 !== 'FROM_END' && where1 !== 'LAST' &&\n      where2 !== 'FROM_END' && where2 !== 'LAST');\n  const textOrder = requiresLengthCall ? Order.MEMBER :\n      Order.NONE;\n  const text =\n      generator.valueToCode(block, 'STRING', textOrder) || \"''\";\n  let code;\n  if (where1 === 'FIRST' && where2 === 'LAST') {\n    code = text;\n    return [code, Order.NONE];\n  } else if (text.match(/^'?\\w+'?$/) || requiresLengthCall) {\n    // If the text is a variable or literal or doesn't require a call for\n    // length, don't generate a helper function.\n    let at1;\n    switch (where1) {\n      case 'FROM_START':\n        at1 = generator.getAdjusted(block, 'AT1');\n        break;\n      case 'FROM_END':\n        at1 = generator.getAdjusted(block, 'AT1', 1, false,\n            Order.SUBTRACTION);\n        at1 = text + '.length - ' + at1;\n        break;\n      case 'FIRST':\n        at1 = '0';\n        break;\n      default:\n        throw Error('Unhandled option (text_getSubstring).');\n    }\n    let at2;\n    switch (where2) {\n      case 'FROM_START':\n        at2 = generator.getAdjusted(block, 'AT2', 1);\n        break;\n      case 'FROM_END':\n        at2 = generator.getAdjusted(block, 'AT2', 0, false,\n            Order.SUBTRACTION);\n        at2 = text + '.length - ' + at2;\n        break;\n      case 'LAST':\n        at2 = text + '.length';\n        break;\n      default:\n        throw Error('Unhandled option (text_getSubstring).');\n    }\n    code = text + '.slice(' + at1 + ', ' + at2 + ')';\n  } else {\n    const at1 = generator.getAdjusted(block, 'AT1');\n    const at2 = generator.getAdjusted(block, 'AT2');\n    const wherePascalCase = {'FIRST': 'First', 'LAST': 'Last',\n      'FROM_START': 'FromStart', 'FROM_END': 'FromEnd'};\n    // The value for 'FROM_END' and'FROM_START' depends on `at` so\n    // we add it as a parameter.\n    const at1Param =\n        (where1 === 'FROM_END' || where1 === 'FROM_START') ? ', at1' : '';\n    const at2Param =\n        (where2 === 'FROM_END' || where2 === 'FROM_START') ? ', at2' : '';\n    const functionName = generator.provideFunction_(\n        'subsequence' + wherePascalCase[where1] + wherePascalCase[where2], `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(sequence${at1Param}${at2Param}) {\n  var start = ${getSubstringIndex('sequence', where1, 'at1')};\n  var end = ${getSubstringIndex('sequence', where2, 'at2')} + 1;\n  return sequence.slice(start, end);\n}\n`);\n    code = functionName + '(' + text +\n        // The value for 'FROM_END' and 'FROM_START' depends on `at` so we\n        // pass it.\n        ((where1 === 'FROM_END' || where1 === 'FROM_START') ? ', ' + at1 : '') +\n        ((where2 === 'FROM_END' || where2 === 'FROM_START') ? ', ' + at2 : '') +\n        ')';\n  }\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['text_changeCase'] = function(block, generator) {\n  // Change capitalization.\n  const OPERATORS = {\n    'UPPERCASE': '.toUpperCase()',\n    'LOWERCASE': '.toLowerCase()',\n    'TITLECASE': null,\n  };\n  const operator = OPERATORS[block.getFieldValue('CASE')];\n  const textOrder = operator ? Order.MEMBER : Order.NONE;\n  const text =\n      generator.valueToCode(block, 'TEXT', textOrder) || \"''\";\n  let code;\n  if (operator) {\n    // Upper and lower case are functions built into generator.\n    code = text + operator;\n  } else {\n    // Title case is not a native JavaScript function.  Define one.\n    const functionName =\n        generator.provideFunction_('textToTitleCase', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(str) {\n  return str.replace(/\\\\S+/g,\n      function(txt) {return txt[0].toUpperCase() + txt.substring(1).toLowerCase();});\n}\n`);\n    code = functionName + '(' + text + ')';\n  }\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['text_trim'] = function(block, generator) {\n  // Trim spaces.\n  const OPERATORS = {\n    'LEFT': \".replace(/^[\\\\s\\\\xa0]+/, '')\",\n    'RIGHT': \".replace(/[\\\\s\\\\xa0]+$/, '')\",\n    'BOTH': '.trim()',\n  };\n  const operator = OPERATORS[block.getFieldValue('MODE')];\n  const text = generator.valueToCode(block, 'TEXT',\n      Order.MEMBER) || \"''\";\n  return [text + operator, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['text_print'] = function(block, generator) {\n  // Print statement.\n  const msg = generator.valueToCode(block, 'TEXT',\n      Order.NONE) || \"''\";\n  return 'window.alert(' + msg + ');\\n';\n};\n\njavascriptGenerator.forBlock['text_prompt_ext'] = function(block, generator) {\n  // Prompt function.\n  let msg;\n  if (block.getField('TEXT')) {\n    // Internal message.\n    msg = generator.quote_(block.getFieldValue('TEXT'));\n  } else {\n    // External message.\n    msg = generator.valueToCode(block, 'TEXT', Order.NONE) || \"''\";\n  }\n  let code = 'window.prompt(' + msg + ')';\n  const toNumber = block.getFieldValue('TYPE') === 'NUMBER';\n  if (toNumber) {\n    code = 'Number(' + code + ')';\n  }\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['text_prompt'] =\n    javascriptGenerator.forBlock['text_prompt_ext'];\n\njavascriptGenerator.forBlock['text_count'] = function(block, generator) {\n  const text = generator.valueToCode(block, 'TEXT',\n      Order.NONE) || \"''\";\n  const sub = generator.valueToCode(block, 'SUB',\n      Order.NONE) || \"''\";\n  const functionName = generator.provideFunction_('textCount', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(haystack, needle) {\n  if (needle.length === 0) {\n    return haystack.length + 1;\n  } else {\n    return haystack.split(needle).length - 1;\n  }\n}\n`);\n  const code = functionName + '(' + text + ', ' + sub + ')';\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['text_replace'] = function(block, generator) {\n  const text = generator.valueToCode(block, 'TEXT',\n      Order.NONE) || \"''\";\n  const from = generator.valueToCode(block, 'FROM',\n      Order.NONE) || \"''\";\n  const to = generator.valueToCode(block, 'TO', Order.NONE) || \"''\";\n  // The regex escaping code below is taken from the implementation of\n  // goog.string.regExpEscape.\n  const functionName = generator.provideFunction_('textReplace', `\nfunction ${generator.FUNCTION_NAME_PLACEHOLDER_}(haystack, needle, replacement) {\n  needle = needle.replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g, '\\\\\\\\$1')\n                 .replace(/\\\\x08/g, '\\\\\\\\x08');\n  return haystack.replace(new RegExp(needle, 'g'), replacement);\n}\n`);\n  const code = functionName + '(' + text + ', ' + from + ', ' + to + ')';\n  return [code, Order.FUNCTION_CALL];\n};\n\njavascriptGenerator.forBlock['text_reverse'] = function(block, generator) {\n  const text = generator.valueToCode(block, 'TEXT',\n      Order.MEMBER) || \"''\";\n  const code = text + \".split('').reverse().join('')\";\n  return [code, Order.FUNCTION_CALL];\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for variable blocks.\n */\n\nimport * as goog from '../../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript.variables');\n\nimport {NameType} from '../../core/names.js';\nimport {Order, javascriptGenerator} from '../javascript.js';\n\n\njavascriptGenerator.forBlock['variables_get'] = function(block, generator) {\n  // Variable getter.\n  const code = generator.nameDB_.getName(block.getFieldValue('VAR'),\n      NameType.VARIABLE);\n  return [code, Order.ATOMIC];\n};\n\njavascriptGenerator.forBlock['variables_set'] = function(block, generator) {\n  // Variable setter.\n  const argument0 = generator.valueToCode(\n                        block, 'VALUE', Order.ASSIGNMENT) || '0';\n  const varName = generator.nameDB_.getName(\n      block.getFieldValue('VAR'), NameType.VARIABLE);\n  return varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for dynamic variable blocks.\n */\n\nimport * as goog from '../../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript.variablesDynamic');\n\nimport {javascriptGenerator} from '../javascript.js';\nimport './variables.js';\n\n// JavaScript is dynamically typed.\njavascriptGenerator.forBlock['variables_get_dynamic'] =\n    javascriptGenerator.forBlock['variables_get'];\njavascriptGenerator.forBlock['variables_set_dynamic'] =\n    javascriptGenerator.forBlock['variables_set'];\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Complete helper functions for generating JavaScript for\n *     blocks.  This is the entrypoint for javascript_compressed.js.\n * @suppress {extraRequire}\n */\n\nimport * as goog from '../../closure/goog/goog.js';\ngoog.declareModuleId('Blockly.JavaScript.all');\n\nimport './colour.js';\nimport './lists.js';\nimport './logic.js';\nimport './loops.js';\nimport './math.js';\nimport './procedures.js';\nimport './text.js';\nimport './variables.js';\nimport './variables_dynamic.js';\n\nexport * from '../javascript.js';\n"]}